/**
 * Otito API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@ayinke.ventures
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "./ApiClient";
import ServerAPIError from "./model/ServerAPIError";
import ServerAPIStatus from "./model/ServerAPIStatus";
import ServerAppresp from "./model/ServerAppresp";
import ServerApprespApplication from "./model/ServerApprespApplication";
import ServerCreateApplicationRequest from "./model/ServerCreateApplicationRequest";
import ServerMRequest from "./model/ServerMRequest";
import ServerMessageHTTPDefinition from "./model/ServerMessageHTTPDefinition";
import ServerMessageRequest from "./model/ServerMessageRequest";
import ServerSwaggerMessageResp from "./model/ServerSwaggerMessageResp";
import ServerSwaggerMessageRespMessagesInner from "./model/ServerSwaggerMessageRespMessagesInner";
import ServerUrlResp from "./model/ServerUrlResp";
import ApplicationApi from "./api/ApplicationApi";
import DashboardApi from "./api/DashboardApi";
import MessageApi from "./api/MessageApi";
import MessagesApi from "./api/MessagesApi";

/**
 * JS API client generated by OpenAPI Generator.<br>
 * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
 * <p>
 * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
 * <pre>
 * var OtitoApiDocumentation = require('index'); // See note below*.
 * var xxxSvc = new OtitoApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
 * var yyyModel = new OtitoApiDocumentation.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
 * and put the application logic within the callback function.</em>
 * </p>
 * <p>
 * A non-AMD browser application (discouraged) might do something like this:
 * <pre>
 * var xxxSvc = new OtitoApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
 * var yyy = new OtitoApiDocumentation.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * </p>
 * @module index
 * @version 0.1.0
 */
export {
  /**
   * The ApiClient constructor.
   * @property {module:ApiClient}
   */
  ApiClient,

  /**
   * The ServerAPIError model constructor.
   * @property {module:model/ServerAPIError}
   */
  ServerAPIError,

  /**
   * The ServerAPIStatus model constructor.
   * @property {module:model/ServerAPIStatus}
   */
  ServerAPIStatus,

  /**
   * The ServerAppresp model constructor.
   * @property {module:model/ServerAppresp}
   */
  ServerAppresp,

  /**
   * The ServerApprespApplication model constructor.
   * @property {module:model/ServerApprespApplication}
   */
  ServerApprespApplication,

  /**
   * The ServerCreateApplicationRequest model constructor.
   * @property {module:model/ServerCreateApplicationRequest}
   */
  ServerCreateApplicationRequest,

  /**
   * The ServerMRequest model constructor.
   * @property {module:model/ServerMRequest}
   */
  ServerMRequest,

  /**
   * The ServerMessageHTTPDefinition model constructor.
   * @property {module:model/ServerMessageHTTPDefinition}
   */
  ServerMessageHTTPDefinition,

  /**
   * The ServerMessageRequest model constructor.
   * @property {module:model/ServerMessageRequest}
   */
  ServerMessageRequest,

  /**
   * The ServerSwaggerMessageResp model constructor.
   * @property {module:model/ServerSwaggerMessageResp}
   */
  ServerSwaggerMessageResp,

  /**
   * The ServerSwaggerMessageRespMessagesInner model constructor.
   * @property {module:model/ServerSwaggerMessageRespMessagesInner}
   */
  ServerSwaggerMessageRespMessagesInner,

  /**
   * The ServerUrlResp model constructor.
   * @property {module:model/ServerUrlResp}
   */
  ServerUrlResp,

  /**
   * The ApplicationApi service constructor.
   * @property {module:api/ApplicationApi}
   */
  ApplicationApi,

  /**
   * The DashboardApi service constructor.
   * @property {module:api/DashboardApi}
   */
  DashboardApi,

  /**
   * The MessageApi service constructor.
   * @property {module:api/MessageApi}
   */
  MessageApi,

  /**
   * The MessagesApi service constructor.
   * @property {module:api/MessagesApi}
   */
  MessagesApi,
};
