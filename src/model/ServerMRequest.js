/**
 * Otito API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@ayinke.ventures
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServerMessageHTTPDefinition from './ServerMessageHTTPDefinition';

/**
 * The ServerMRequest model module.
 * @module model/ServerMRequest
 * @version 0.1.0
 */
class ServerMRequest {
    /**
     * Constructs a new <code>ServerMRequest</code>.
     * @alias module:model/ServerMRequest
     */
    constructor() { 
        
        ServerMRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerMRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerMRequest} obj Optional instance to populate.
     * @return {module:model/ServerMRequest} The populated <code>ServerMRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerMRequest();

            if (data.hasOwnProperty('app')) {
                obj['app'] = ApiClient.convertToType(data['app'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('ip_address')) {
                obj['ip_address'] = ApiClient.convertToType(data['ip_address'], 'String');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('request')) {
                obj['request'] = ServerMessageHTTPDefinition.constructFromObject(data['request']);
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = ServerMessageHTTPDefinition.constructFromObject(data['response']);
            }
            if (data.hasOwnProperty('status_code')) {
                obj['status_code'] = ApiClient.convertToType(data['status_code'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerMRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerMRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['app'] && !(typeof data['app'] === 'string' || data['app'] instanceof String)) {
            throw new Error("Expected the field `app` to be a primitive type in the JSON string but got " + data['app']);
        }
        // ensure the json data is a string
        if (data['ip_address'] && !(typeof data['ip_address'] === 'string' || data['ip_address'] instanceof String)) {
            throw new Error("Expected the field `ip_address` to be a primitive type in the JSON string but got " + data['ip_address']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // validate the optional field `request`
        if (data['request']) { // data not null
          ServerMessageHTTPDefinition.validateJSON(data['request']);
        }
        // validate the optional field `response`
        if (data['response']) { // data not null
          ServerMessageHTTPDefinition.validateJSON(data['response']);
        }

        return true;
    }


}



/**
 * The app reference of the user/organisation
 * @member {String} app
 */
ServerMRequest.prototype['app'] = undefined;

/**
 * if empty, the current timestamp when the message was received would be used
 * @member {Number} created_at
 */
ServerMRequest.prototype['created_at'] = undefined;

/**
 * IPAddress is used to identify the iP of the user. this is optional and can be left
 * @member {String} ip_address
 */
ServerMRequest.prototype['ip_address'] = undefined;

/**
 * @member {String} method
 */
ServerMRequest.prototype['method'] = undefined;

/**
 * @member {String} path
 */
ServerMRequest.prototype['path'] = undefined;

/**
 * @member {module:model/ServerMessageHTTPDefinition} request
 */
ServerMRequest.prototype['request'] = undefined;

/**
 * @member {module:model/ServerMessageHTTPDefinition} response
 */
ServerMRequest.prototype['response'] = undefined;

/**
 * @member {Number} status_code
 */
ServerMRequest.prototype['status_code'] = undefined;






export default ServerMRequest;

